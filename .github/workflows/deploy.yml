# Feuerwehr Hamberg - GitHub Pages Deployment
name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  # Allow manual triggering only
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Simple deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Git credentials with Personal Access Token
        run: |
          # Configure git with secure credentials from GitHub Secrets
          if [ ! -z "${{ secrets.GH_USERNAME }}" ] && [ ! -z "${{ secrets.GH_PAT }}" ]; then
            echo "Setting up Git credentials with Personal Access Token"
            git config --global user.name "${{ secrets.GH_USERNAME }}"
            git config --global user.email "${{ secrets.GH_EMAIL }}"
            
            # Setup credential helper for HTTPS authentication
            git config --global credential.helper store
            echo "https://${{ secrets.GH_USERNAME }}:${{ secrets.GH_PAT }}@github.com" > ~/.git-credentials
            
            echo "✅ Git credentials configured successfully"
          else
            echo "⚠️  Using default GitHub Actions credentials"
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
          fi

      - name: Create data branch if it doesn't exist
        run: |
          # Check if data branch exists remotely
          if ! git ls-remote --exit-code --heads origin data >/dev/null 2>&1; then
            echo "Creating data branch for member data storage..."
            
            # Create orphan branch for data storage
            git checkout --orphan data
            git rm -rf . || true
            
            # Create data branch structure
            echo "# 🔒 Feuerwehr Hamberg - Mitgliederdaten" > README.md
            echo "" >> README.md
            echo "Dieser Branch enthält die Mitgliederdaten der Feuerwehr Hamberg." >> README.md
            echo "Zugriff nur für autorisierte Personen." >> README.md
            echo "" >> README.md
            echo "## Datenformat" >> README.md
            echo "- JSON-Dateien mit Zeitstempel" >> README.md
            echo "- Format: member-data-YYYY-MM-DDTHH-mm-ss-sssZ.json" >> README.md
            echo "" >> README.md
            echo "## Zugriff" >> README.md
            echo "- Nur über GitHub Personal Access Token" >> README.md
            echo "- Sichere Authentifizierung via GitHub Actions" >> README.md
            
            mkdir -p data
            echo "# Mitgliederdaten werden hier gespeichert" > data/README.md
            echo "Zugang nur mit entsprechenden Berechtigungen." >> data/README.md
            
            git add README.md data/README.md
            git commit -m "Initialize secure data branch for member data storage"
            git push origin data
            
            # Switch back to main branch
            git checkout main
            
            echo "✅ Data branch created successfully with secure access"
          else
            echo "✅ Data branch already exists"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Inject GitHub token into JavaScript (for data submission)
        run: |
          # Only inject token if FF_DATA_TOKEN secret exists
          if [ ! -z "${{ secrets.FF_DATA_TOKEN }}" ]; then
            echo "✅ FF_DATA_TOKEN found - enabling data submission functionality"
            # Replace the token placeholder in the JavaScript file
            sed 's/return window\.FF_DATA_TOKEN || null;/return "${{ secrets.FF_DATA_TOKEN }}";/g' script.js > script_with_token.js
            mv script_with_token.js script.js
            echo "✅ Data submission enabled with secure token injection"
          else
            echo "⚠️  FF_DATA_TOKEN not configured - website will work in preview mode only"
            echo "   To enable data submission:"
            echo "   1. Create Personal Access Token with 'repo' permissions"
            echo "   2. Add as repository secret named 'FF_DATA_TOKEN'"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Create data summary (manual trigger only)
  data-summary:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: data
          fetch-depth: 0

      - name: Generate data summary
        run: |
          echo "# 📊 Mitgliederdaten Übersicht" > data_summary.md
          echo "Erstellt am: $(date '+%d.%m.%Y um %H:%M Uhr')" >> data_summary.md
          echo "" >> data_summary.md

          # Count total submissions
          total=$(find data -name "member-data-*.json" -type f 2>/dev/null | wc -l)
          echo "## 📈 Statistiken" >> data_summary.md
          echo "- **Gesamte Anmeldungen:** $total" >> data_summary.md

          # Recent submissions (last 7 days)
          recent=$(find data -name "member-data-*.json" -type f -mtime -7 2>/dev/null | wc -l)
          echo "- **Neue Anmeldungen (7 Tage):** $recent" >> data_summary.md
          echo "" >> data_summary.md

          # List recent files if any exist
          if [ $recent -gt 0 ]; then
            echo "## 📄 Aktuelle Dateien (letzte 7 Tage)" >> data_summary.md
            find data -name "member-data-*.json" -type f -mtime -7 2>/dev/null | sort -r | head -10 | sed 's/^/- /' >> data_summary.md
          else
            echo "## 📄 Keine neuen Dateien in den letzten 7 Tagen" >> data_summary.md
          fi

          echo "" >> data_summary.md
          echo "---" >> data_summary.md
          echo "*Automatisch generiert durch GitHub Actions*" >> data_summary.md

      - name: Setup Git credentials for data branch
        run: |
          # Use personal credentials if available, otherwise use GitHub Actions default
          if [ ! -z "${{ secrets.GH_USERNAME }}" ] && [ ! -z "${{ secrets.GH_PAT }}" ]; then
            echo "Using personal GitHub credentials"
            git config --local user.name "${{ secrets.GH_USERNAME }}"
            git config --local user.email "${{ secrets.GH_EMAIL }}"
            git remote set-url origin https://${{ secrets.GH_USERNAME }}:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          else
            echo "Using GitHub Actions default credentials"
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
          fi

      - name: Commit summary
        run: |
          git add data_summary.md

          if git diff --staged --quiet; then
            echo "Keine Änderungen am Summary"
          else
            git commit -m "📊 Update data summary - $(date '+%d.%m.%Y %H:%M')"
            git push
            echo "✅ Data summary updated"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
