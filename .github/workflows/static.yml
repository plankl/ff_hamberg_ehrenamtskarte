# Feuerwehr Hamberg - GitHub Pages Deployment
name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  # Allow manual triggering only
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Simple deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Git credentials
        run: |
          # Use default GitHub Actions credentials (sufficient for basic functionality)
          echo "‚úÖ Using GitHub Actions default credentials"
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Create data branch if it doesn't exist
        run: |
          # Check if data branch exists remotely
          if ! git ls-remote --exit-code --heads origin data >/dev/null 2>&1; then
            echo "Creating data branch for member data storage..."
            
            # Create orphan branch for data storage
            git checkout --orphan data
            git rm -rf . || true
            
            # Create data branch structure
            echo "# üîí Feuerwehr Hamberg - Mitgliederdaten" > README.md
            echo "" >> README.md
            echo "Dieser Branch enth√§lt die Mitgliederdaten der Feuerwehr Hamberg." >> README.md
            echo "Zugriff nur f√ºr autorisierte Personen." >> README.md
            echo "" >> README.md
            echo "## Datenformat" >> README.md
            echo "- JSON-Dateien mit Zeitstempel" >> README.md
            echo "- Format: member-data-YYYY-MM-DDTHH-mm-ss-sssZ.json" >> README.md
            echo "" >> README.md
            echo "## Zugriff" >> README.md
            echo "- Nur √ºber GitHub Personal Access Token" >> README.md
            echo "- Sichere Authentifizierung via GitHub Actions" >> README.md
            
            mkdir -p data
            echo "# Mitgliederdaten werden hier gespeichert" > data/README.md
            echo "Zugang nur mit entsprechenden Berechtigungen." >> data/README.md
            
            git add README.md data/README.md
            git commit -m "Initialize secure data branch for member data storage"
            git push origin data
            
            # Switch back to main branch
            git checkout main
            
            echo "‚úÖ Data branch created successfully with secure access"
          else
            echo "‚úÖ Data branch already exists"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Inject GitHub token into JavaScript (for data submission)
        run: |
          # Debug: Check if FF_DATA_TOKEN secret exists
          echo "üîç Debug: Checking FF_DATA_TOKEN availability..."
          if [ ! -z "${{ secrets.FF_DATA_TOKEN }}" ]; then
            echo "‚úÖ FF_DATA_TOKEN found - enabling data submission functionality"
            echo "üîç Token starts with: $(echo '${{ secrets.FF_DATA_TOKEN }}' | cut -c1-8)..."
            echo "üîç Token length: $(echo '${{ secrets.FF_DATA_TOKEN }}' | wc -c)"
            
            # Replace the token placeholder in the JavaScript file
            sed 's/GITHUB_TOKEN_PLACEHOLDER/${{ secrets.FF_DATA_TOKEN }}/g' script.js > script_with_token.js
            mv script_with_token.js script.js
            
            # Verify the replacement worked
            if grep -q '${{ secrets.FF_DATA_TOKEN }}' script.js; then
              echo "‚úÖ Token injection successful!"
            else
              echo "‚ùå Token injection failed - placeholder not found or replaced"
            fi
            
            echo "‚úÖ Data submission enabled with secure token injection"
          else
            echo "‚ùå FF_DATA_TOKEN not found in secrets!"
            echo "‚ö†Ô∏è  Website will work in preview mode only"
            echo ""
            echo "üìù To fix this issue:"
            echo "   1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "   2. Click 'New repository secret'"
            echo "   3. Name: FF_DATA_TOKEN"
            echo "   4. Value: Your Personal Access Token (ghp_...)"
            echo "   5. Click 'Add secret'"
            echo ""
            echo "üîó Create token at: https://github.com/settings/tokens"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
